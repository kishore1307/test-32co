name: Terraform Deployment

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION: "ap-south-1"
  TF_VERSION: "1.8.2"

jobs:
  terraform:
    name: "Terraform CI"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    defaults:
      run:
        working-directory: ./infra

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false

      - name: Terraform Format Check
        id: fmt
        run: |
          terraform fmt -check -recursive || echo "::warning::Some files need formatting. Run 'terraform fmt' to fix."
          terraform fmt -recursive  # Auto-format files
          git diff --exit-code || echo "::warning::Formatting changes detected"

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: |
          terraform plan \
            -var="db_password=${{ secrets.DB_PASSWORD }}" \
            -var="key_name=${{ secrets.KEY_PAIR_NAME }}"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          terraform apply -auto-approve \
            -var="db_password=${{ secrets.DB_PASSWORD }}" \
            -var="key_name=${{ secrets.KEY_PAIR_NAME }}"
  
      - name: Terraform Destroy            
        run: terraform destroy
