name: Terraform Deployment

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION: "ap-south-1"
  TF_VERSION: "1.8.2"

jobs:
  terraform:
    name: "Terraform Plan/Apply"
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      id-token: write  # Required for OIDC auth

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -var="db_password=${{ secrets.DB_PASSWORD }}" -var="key_name=${{ secrets.KEY_PAIR_NAME }}"
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -var="db_password=${{ secrets.DB_PASSWORD }}" -var="key_name=${{ secrets.KEY_PAIR_NAME }}"
